# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-03-19 11:45
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import questionnaire.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('questionnaire', '0001_initial'),
        ('community', '0002_auto_20190319_1145'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('emif', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.TextField()),
                ('comment', models.TextField(null=True)),
                ('date_of_capture', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AnswerChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_value', models.TextField(null=True)),
                ('new_value', models.TextField(null=True)),
                ('old_comment', models.TextField(null=True)),
                ('new_comment', models.TextField(null=True)),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fingerprint.Answer')),
            ],
        ),
        migrations.CreateModel(
            name='AnswerRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now=True)),
                ('comment', models.CharField(default=b'', max_length=1000)),
                ('removed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Fingerprint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fingerprint_hash', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True, validators=[django.core.validators.MaxLengthValidator(600)])),
                ('last_modification', models.DateTimeField(null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('hits', models.IntegerField(default=0, help_text=b'Hit count for this fingerprint')),
                ('removed', models.BooleanField(default=False, help_text=b'Remove logically the fingerprint')),
                ('fill', models.FloatField(default=0, help_text=b'Database Questionset')),
                ('draft', models.BooleanField(default=True)),
                ('community', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='community.Community')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fingerprint_owner_fk', to=settings.AUTH_USER_MODEL)),
                ('questionnaire', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='questionnaire.Questionnaire')),
                ('shared', models.ManyToManyField(null=True, related_name='fingerprint_shared_fk', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FingerprintHead',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('revision', models.IntegerField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('fingerprint_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fingerprint.Fingerprint')),
            ],
        ),
        migrations.CreateModel(
            name='FingerprintImportFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to=questionnaire.models.fileHash)),
                ('filename', models.CharField(blank=True, max_length=3000, null=True)),
                ('status', models.IntegerField(choices=[(0, b'Fingerprint import started'), (1, b'Fingerprint is being imported'), (2, b'Fingerprint finished importing')], default=0)),
                ('uploader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FingerprintPending',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pending', models.BooleanField(default=False)),
                ('fingerprint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fingerprint.Fingerprint')),
            ],
        ),
        migrations.CreateModel(
            name='FingerprintReturnedAdvanced',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('fingerprint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fingerprint.Fingerprint')),
                ('query_reference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='emif.AdvancedQuery')),
                ('searcher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FingerprintReturnedSimple',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('fingerprint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fingerprint.Fingerprint')),
                ('query_reference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='emif.QueryLog')),
                ('searcher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FingerprintSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('latest_update', models.DateTimeField(auto_now=True)),
                ('removed', models.BooleanField(default=False)),
                ('fingerprint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fingerprint.Fingerprint')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionSetCompletion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latest_update', models.DateTimeField(auto_now=True)),
                ('fill', models.FloatField(default=0)),
                ('answered', models.IntegerField(default=0)),
                ('possible', models.IntegerField(default=0)),
                ('fingerprint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fingerprint.Fingerprint')),
                ('questionset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionnaire.QuestionSet')),
            ],
        ),
        migrations.AddField(
            model_name='answerrequest',
            name='fingerprint',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fingerprint.Fingerprint'),
        ),
        migrations.AddField(
            model_name='answerrequest',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionnaire.Question'),
        ),
        migrations.AddField(
            model_name='answerrequest',
            name='requester',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='answerchange',
            name='revision_head',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fingerprint.FingerprintHead'),
        ),
        migrations.AddField(
            model_name='answer',
            name='fingerprint_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fingerprint.Fingerprint'),
        ),
        migrations.AddField(
            model_name='answer',
            name='next_answer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='next_ans', to='fingerprint.Answer'),
        ),
        migrations.AddField(
            model_name='answer',
            name='previous_answer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prev_ans', to='fingerprint.Answer'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionnaire.Question'),
        ),
    ]
