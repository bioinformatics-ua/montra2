[{"pk": 3, "model": "developer.plugin", "fields": {"create_date": "2015-05-12T16:12:41.853Z", "name": "Literature", "latest_update": "2015-05-13T14:41:28.466Z", "owner": 1, "removed": false, "type": 1, "slug": "literature", "icon": ""}}, {"pk": 4, "model": "developer.plugin", "fields": {"create_date": "2015-05-13T12:52:45.354Z", "name": "Extra Information", "latest_update": "2015-05-13T14:45:17.615Z", "owner": 1, "removed": false, "type": 1, "slug": "extrainfo", "icon": ""}}, {"pk": 5, "model": "developer.plugin", "fields": {"create_date": "2015-05-13T15:07:45.652Z", "name": "Discussion", "latest_update": "2015-05-13T15:07:45.652Z", "owner": 1, "removed": false, "type": 1, "slug": "discussion", "icon": ""}}, {"pk": 6, "model": "developer.plugin", "fields": {"create_date": "2015-10-05T15:53:57.786Z", "name": "Achilles", "latest_update": "2015-10-09T12:32:41.950Z", "owner": 1, "removed": false, "type": 1, "slug": "achilles", "icon": ""}}, {"pk": 4, "model": "developer.pluginversion", "fields": {"removed": true, "create_date": "2015-05-12T16:42:37.379Z", "plugin": 3, "submitted": true, "latest_update": "2015-05-13T14:41:28.469Z", "version": 2, "is_remote": false, "path": "confs = {\r\n    icon: '<i class=\"icon-book\"></i>',\r\n    name: \"Literature\",\r\n    extralibs: [\"//bioinformatics.ua.pt/becas/embed-widget.js\", \"{{STATIC_URL}}js/jquery.simplePagination.js\"]\r\n};\r\n\r\nplugin = function(sdk){\r\n    this_sdk = sdk;\r\n\r\n    var per_page=10;\r\n    var publications=[];\r\n    var this_sdk;\r\n    var context;\r\n\r\n    function initializeBecas(pmid, container){\r\n        var becasWidget2;\r\n\r\n        // Initialize another widget\r\n        becasWidget2 = new becas.Widget({\r\n            container: container\r\n        });\r\n        // Request abstract annotation by PMID\r\n        becasWidget2.annotatePublication({\r\n            // required parameter\r\n            pmid: pmid,\r\n            // optional parameters\r\n            groups: {\r\n                \"SPEC\": true,\r\n                \"ANAT\": true,\r\n                \"DISO\": true,\r\n                \"PATH\": true,\r\n                \"CHED\": true,\r\n                \"ENZY\": true,\r\n                \"MRNA\": true,\r\n                \"PRGE\": true,\r\n                \"COMP\": true,\r\n                \"FUNC\": true,\r\n                \"PROC\": true\r\n            },\r\n            success: function() {\r\n                // Everything went fine, widget is rendered.\r\n            },\r\n            error: function(err) {\r\n                // An error prevented annotation, an error message has rendered.\r\n            }\r\n        });\r\n    }\r\n\r\n    function collapser() {\r\n\r\n        if ($(this).text().indexOf('Collapse') !== -1) {\r\n        console.log(collapser);\r\n            expanded = false;\r\n            $(this).html('<i class=\"icon-plus\"></i>&nbsp; Expand all');\r\n            //change_name_collapse(false);\r\n\r\n            $(\".collapse\", context).collapse(\"hide\");\r\n\r\n        } else {\r\n            expanded = true;\r\n            $(this).html('<i class=\"icon-minus\"></i>&nbsp; Collapse all');\r\n            //change_name_collapse(true);\r\n            $(\".collapse\", context).collapse(\"show\");\r\n        }\r\n    }\r\n\r\n    function disableLinks(){\r\n        $('.edit_paginator .page-link', context).click(function(event){\r\n             event.preventDefault();\r\n             return false;\r\n        });\r\n    }\r\n    function redrawIndicator(start, end){\r\n        $('.showing_publications_info', context).html(\"Showing \"+(start+1)+\" - \"+end+\" of \"+publications.length+\" Publications\");\r\n    }\r\n\r\n    function showPublicationPage(pageNumber){\r\n        console.log(context);\r\n        var start = (pageNumber-1)*per_page;\r\n        var end = ((pageNumber-1)*per_page)+per_page;\r\n\r\n        // If last page and end is bigger than results\r\n        if (end > publications.length){\r\n            end = publications.length;\r\n        }\r\n\r\n        console.log(\"start:\"+start+\" end: \"+end);\r\n\r\n        $('.pubscontainer', context).html('<button id=\"collapseliterature\" class=\"btn pull-right\" href=\"\"><i class=\"icon-plus\"></i>&nbsp; Expand all</button><div class=\"clearfix accordion fullwidth\" id=\"accordion2\" style=\"margin-top: 10px;\">');\r\n        var pub, i;\r\n        for(var i=start;i<end;i++){\r\n            pub = publications[i];\r\n\r\n            $('.pubscontainer', context).append(\r\n                '<div class=\"accordion-group\">\\\r\n                    <div class=\"accordion-heading\">\\\r\n                        <a class=\"accordion-toggle\" data-toggle=\"collapse\" data-parent=\"#accordion2\" href=\"#collapse'+i+'\">\\\r\n                           '+pub.title+'\\\r\n                        </a>\\\r\n                    </div>\\\r\n                    <div id=\"collapse'+i+'\" class=\"accordion-body collapse\">\\\r\n                        <div class=\"accordion-inner\">\\\r\n                            <div id=\"becaswidget-'+pub.pmid+'\"></div>\\\r\n                        </div>\\\r\n                    </div>\\\r\n                </div>'\r\n            );\r\n        }\r\n\r\n        $('.pubscontainer', context).append('</div>');\r\n        for(var i=start;i<end;i++){\r\n            pub = publications[i];\r\n            initializeBecas(pub.pmid, \"becaswidget-\"+pub.pmid);\r\n        }\r\n\r\n        $('#collapseliterature', context).click(collapser);\r\n\r\n        disableLinks();\r\n        redrawIndicator(start, end);\r\n    }\r\n\r\n    function handlePagination(pageNumber, event){\r\n        showPublicationPage(pageNumber)\r\n    }\r\n\r\n    var empty_message = '\\\r\n    <h4 class=\"pull-center\">No publications associated with this database.</h4>\\\r\n    <p class=\"pull-center\">Publications added to this database, will appear here accompanied with annotations.</p>\\\r\n    ';\r\n    sdk.html('Loading');\r\n    sdk.refresh();\r\n    context = sdk.container();\r\n\r\n    var fp = FingerprintProxy.getInstance();\r\n    var store = fp.getStore();\r\n\r\n    store.getPublications().then(function(response){\r\n        if(response.publications && response.publications.length > 0){\r\n            publications = response.publications;\r\n\r\n            sdk.html('<div class=\"pubscontainer\"></div>\\\r\n                <div class=\"showing_publications_info\"></div>\\\r\n                <div class=\"pull-right edit_paginator pagination\">\\\r\n            </div>');\r\n            sdk.refresh();\r\n            $('.edit_paginator', context).pagination({\r\n                items: publications.length,\r\n                itemsOnPage: per_page,\r\n                onPageClick: handlePagination\r\n            });\r\n\r\n            showPublicationPage(1);\r\n\r\n        } else {\r\n            sdk.html(empty_message);\r\n            sdk.refresh();\r\n        }\r\n    })/*.catch(function(ex){\r\n        console.log(ex);\r\n        sdk.html('Error getting publications');\r\n        sdk.refresh();\r\n    })*/;\r\n\r\n};", "submitted_desc": "te", "approved": true}}, {"pk": 6, "model": "developer.pluginversion", "fields": {"removed": false, "create_date": "2015-05-13T15:08:41.440Z", "plugin": 5, "submitted": true, "latest_update": "2015-10-09T12:26:05.546Z", "version": 1, "is_remote": false, "path": "confs = {\r\n    icon: '<i class=\"fas fa-fw fa-comment\"></i>',\r\n    name: \"Discussion\"\r\n};\r\nplugin = function(sdk) {\r\n    sdk.html('Loading...');\r\n    sdk.refresh();\r\n    var context = sdk.container();\r\n    var getComment = function(comment){\r\n        return '<div class=\"comment\">\\\r\n            <blockquote>\\\r\n                <p style=\"font-size: 16px\">' + comment.comment + '</p>\\\r\n                <small>' + comment['user_name'] + ' posted on ' + comment['submit_date'] + '</small>\\\r\n            </blockquote>\\\r\n        </div>';\r\n    }\r\n    var base = function(data) {\r\n        var tmp = '<div class=\"col-md-8 col-md-offset-2\">';\r\n        if (data.length == 0) {\r\n            tmp += '<center><p>No comments yet.</p></center>';\r\n        } else {\r\n            tmp += '<center><span class=\"comments_total\">' + data.length + '</span> comments</center>';\r\n        }\r\n\r\n        tmp += '<div class=\"clearfix col-md-12 comment_form\">\\\r\n                    <fieldset>\\\r\n                        <textarea rows=\"5\" name=\"comment\" class=\"form-control id_comment col-md-12\" placeholder=\"Insert your comment or question here...\" autofocus></textarea>\\\r\n                        <button style=\"margin-left:0px;\" class=\"submit_button col-md-12 btn btn-primary\" type=\"submit\"  data-loading-text=\"Sending comment...\">Post comment</button>\\\r\n                    </fieldset>\\\r\n                </div>';\r\n\r\n        tmp += '<div style=\"margin-top:10px\" class=\"clearfix col-md-12\"><div class=\"newComments\"></div>';\r\n\r\n        for (var i = 0; i < data.length; i++) {\r\n            tmp += getComment(data[i]);\r\n        }\r\n\r\n        tmp += '</div></div>';\r\n\r\n        return tmp;\r\n    };\r\n\r\n    var fp = FingerprintProxy.getInstance();\r\n    var store = fp.getStore();\r\n\r\n    store.getComments().then(function(response) {\r\n        sdk.html(base(response.comments));\r\n        sdk.refresh();\r\n        $('.submit_button', context).click(function() {\r\n            var comment = $('.id_comment', context).val();\r\n\r\n            if (comment && comment.trim().length > 20) {\r\n                store.putComment({\r\n                    comment: comment\r\n                }).then(function(response) {\r\n                    console.log(response);\r\n                    $('.newComments', context).append(getComment(response.comment));\r\n                }).catch(function(ex){\r\n                    bootbox.alert(\"Unable to add new comment, please try again.\");\r\n                });\r\n            } else {\r\n                bootbox.alert(\"A comment must have more then 20 characters.\");\r\n            }\r\n\r\n        });\r\n    });\r\n};", "submitted_desc": "213", "approved": true}}, {"pk": 5, "model": "developer.pluginversion", "fields": {"removed": false, "create_date": "2015-05-13T12:52:52.506Z", "plugin": 4, "submitted": true, "latest_update": "2015-10-09T12:27:21.229Z", "version": 1, "is_remote": false, "path": "confs = {\r\n    icon: '<i class=\"icon-download-alt\"></i>',\r\n    name: \"Extra Information\",\r\n    extralibs: [\"{{STATIC_URL}}js/d3/d3.v3.min.js\"]\r\n};\r\nplugin = function(sdk) {\r\n    var context = sdk.container();\r\n\r\n    function color(d) {\r\n        return d._children ? \"#3182bd\" : d.children ? \"#c6dbef\" : \"#fd8d3c\";\r\n    }\r\n\r\n    function click(d) {\r\n        if (d.children) {\r\n            d._children = d.children;\r\n            d.children = null;\r\n        } else {\r\n            d.children = d._children;\r\n            d._children = null;\r\n        }\r\n        update(d);\r\n    }\r\n    var vis, w = 960,\r\n        u = 0,\r\n        h = 800,\r\n        barHeight = 20,\r\n        barWidth = w * .8,\r\n        duration = 400,\r\n        root;\r\n\r\n    var tree = d3.layout.tree()\r\n        .size([h, 100]);\r\n\r\n    var diagonal = d3.svg.diagonal()\r\n        .projection(function(d) {\r\n            return [d.y, d.x];\r\n        });\r\n\r\n    function json_to_d3json(obj) {\r\n        d3_result = {};\r\n        hash_childrens = {};\r\n        d3_result['name'] = 'Extra Information';\r\n\r\n        d3_aux = [];\r\n        for (var t = 0; t < obj.length; t++) {\r\n\r\n            var row = obj[t];\r\n            var key = row.field\r\n            var res = key.split(\"+\");\r\n\r\n            var aux_root = d3_aux;\r\n            console.log(d3_aux);\r\n\r\n            compact_slug = \"\";\r\n            for (var j = 0; j < res.length; j++) {\r\n\r\n                var l = res[j];\r\n                if (compact_slug !== \"\") {\r\n                    compact_slug = compact_slug + \"+\" + l;\r\n                } else {\r\n                    compact_slug = l;\r\n                }\r\n                var aux = {}\r\n                aux['name'] = l;\r\n\r\n                if (res.length - 1 != j) {\r\n\r\n                    if (compact_slug in hash_childrens) {\r\n                        aux_root = hash_childrens[compact_slug];\r\n                    } else {\r\n                        var aux_list = [];\r\n                        aux['children'] = aux_list;\r\n                        aux_root.push(aux);\r\n                        aux_root = aux_list;\r\n                        hash_childrens[compact_slug] = aux_list;\r\n                    }\r\n\r\n                } else {\r\n\r\n                    if (compact_slug in hash_childrens) {\r\n                        var aux2 = {}\r\n                        aux2['name'] = row.value;\r\n                        hash_childrens[compact_slug].push(aux2);\r\n\r\n                    } else {\r\n\r\n                        var aux2 = {};\r\n                        aux2['name'] = row.value;\r\n                        var aux_list = [aux2];\r\n                        aux['children'] = aux_list;\r\n\r\n                        hash_childrens[compact_slug] = aux_list\r\n                        aux_root.push(aux);\r\n                    }\r\n\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        d3_result['children'] = d3_aux;\r\n        console.log(hash_childrens);\r\n        console.log(d3_result);\r\n        return d3_result;\r\n    }\r\n\r\n    var base = function(data) {\r\n        var tmp = '<div class=\"span12\">\\\r\n            <a class=\"btn_pivot_table btn pull-right\" href=\"\">Pivot table</a>\\\r\n            </div>\\\r\n            <div>\\\r\n                <div class=\"chart span4\" style=\"display:none;\"></div>\\\r\n                <div class=\"span10 pivot_table_extra_information\">\\\r\n                <table class=\"table table-bordered table-hover\">\\\r\n                <thead><th>Tag</th><th>Value</th></thead>\\\r\n                <tbody>';\r\n\r\n        for (var i = 0; i < data.length; i++) {\r\n            var row = data[i];\r\n            tmp += \"<tr><td>\" + row.field + \"</td><td>\" + row.value + \"</td></tr>\";\r\n        }\r\n\r\n        tmp += '</tbody></table></div>\\\r\n                </div> <div class=\"span8\"></div>';\r\n\r\n        return tmp;\r\n    }\r\n\r\n    function update(source) {\r\n\r\n        // Compute the flattened node list. TODO use d3.layout.hierarchy.\r\n        var nodes = tree.nodes(root);\r\n\r\n        // Compute the \"layout\".\r\n        nodes.forEach(function(n, i) {\r\n            n.x = i * barHeight;\r\n        });\r\n\r\n        // Update the nodes\u2026\r\n        var node = vis.selectAll(\"g.node\")\r\n            .data(nodes, function(d) {\r\n                return d.id || (d.id = ++u);\r\n            });\r\n\r\n        var nodeEnter = node.enter().append(\"svg:g\")\r\n            .attr(\"class\", \"node\")\r\n            .attr(\"transform\", function(d) {\r\n                return \"translate(\" + source.y0 + \",\" + source.x0 + \")\";\r\n            })\r\n            .style(\"opacity\", 1e-6);\r\n\r\n        // Enter any new nodes at the parent's previous position.\r\n        nodeEnter.append(\"svg:rect\")\r\n            .attr(\"y\", -barHeight / 2)\r\n            .attr(\"height\", barHeight)\r\n            .attr(\"width\", barWidth)\r\n            .style(\"fill\", color)\r\n            .on(\"click\", click);\r\n\r\n        nodeEnter.append(\"svg:text\")\r\n            .attr(\"dy\", 3.5)\r\n            .attr(\"dx\", 5.5)\r\n            .text(function(d) {\r\n                return d.name;\r\n            });\r\n\r\n        // Transition nodes to their new position.\r\n        nodeEnter.transition()\r\n            .duration(duration)\r\n            .attr(\"transform\", function(d) {\r\n                return \"translate(\" + d.y + \",\" + d.x + \")\";\r\n            })\r\n            .style(\"opacity\", 1);\r\n\r\n        node.transition()\r\n            .duration(duration)\r\n            .attr(\"transform\", function(d) {\r\n                return \"translate(\" + d.y + \",\" + d.x + \")\";\r\n            })\r\n            .style(\"opacity\", 1)\r\n            .select(\"rect\")\r\n            .style(\"fill\", color);\r\n\r\n        // Transition exiting nodes to the parent's new position.\r\n        node.exit().transition()\r\n            .duration(duration)\r\n            .attr(\"transform\", function(d) {\r\n                return \"translate(\" + source.y + \",\" + source.x + \")\";\r\n            })\r\n            .style(\"opacity\", 1e-6)\r\n            .remove();\r\n\r\n        // Update the links\u2026\r\n        var link = vis.selectAll(\"path.link\")\r\n            .data(tree.links(nodes), function(d) {\r\n                return d.target.id;\r\n            });\r\n\r\n        // Enter any new links at the parent's previous position.\r\n        link.enter().insert(\"svg:path\", \"g\")\r\n            .attr(\"class\", \"link\")\r\n            .attr(\"d\", function(d) {\r\n                var o = {\r\n                    x: source.x0,\r\n                    y: source.y0\r\n                };\r\n                return diagonal({\r\n                    source: o,\r\n                    target: o\r\n                });\r\n            })\r\n            .transition()\r\n            .duration(duration)\r\n            .attr(\"d\", diagonal);\r\n\r\n        // Transition links to their new position.\r\n        link.transition()\r\n            .duration(duration)\r\n            .attr(\"d\", diagonal);\r\n\r\n        // Transition exiting nodes to the parent's new position.\r\n        link.exit().transition()\r\n            .duration(duration)\r\n            .attr(\"d\", function(d) {\r\n                var o = {\r\n                    x: source.x,\r\n                    y: source.y\r\n                };\r\n                return diagonal({\r\n                    source: o,\r\n                    target: o\r\n                });\r\n            })\r\n            .remove();\r\n\r\n        // Stash the old positions for transition.\r\n        nodes.forEach(function(d) {\r\n            d.x0 = d.x;\r\n            d.y0 = d.y;\r\n        });\r\n    }\r\n    sdk.html('Loading...');\r\n    sdk.refresh();\r\n\r\n    var fp = FingerprintProxy.getInstance();\r\n    var store = fp.getStore();\r\n\r\n    store.getExtra().then(function(response) {\r\n\r\n        if (response.api.length > 0) {\r\n            sdk.html(base(response.api));\r\n            sdk.refresh();\r\n            vis = d3.select(\".chart\", context).append(\"svg:svg\")\r\n                .attr(\"width\", 960)\r\n                .attr(\"height\", 800)\r\n                .append(\"svg:g\")\r\n                .attr(\"transform\", \"translate(20,30)\");\r\n            var chart = json_to_d3json(response.api);\r\n            chart.x0 = 0;\r\n            chart.y0 = 0;\r\n            root = chart;\r\n            update(chart);\r\n\r\n            var pivot_table = $('.btn_pivot_table', context);\r\n            pivot_table.bind('click', function(e) {\r\n                $(\".pivot_table_extra_information\", context).toggle();\r\n                $(\".chart\", context).toggle();\r\n\r\n                if (pivot_table.text() == 'Pivot table') {\r\n                    pivot_table.text('Tree view');\r\n                } else {\r\n                    pivot_table.text('Pivot table');\r\n                }\r\n                return false;\r\n            });\r\n        } else {\r\n            sdk.html('<center>No information available. You can add information from external applications with <a href=\"api-info\">API web services.</a></center>');\r\n            sdk.refresh();\r\n        }\r\n    });\r\n};", "submitted_desc": "teste", "approved": true}}, {"pk": 7, "model": "developer.pluginversion", "fields": {"removed": false, "create_date": "2015-10-05T15:54:57.245Z", "plugin": 6, "submitted": true, "latest_update": "2015-10-09T12:32:41.953Z", "version": 1, "is_remote": false, "path": "confs = {\r\n    extralibs: [\r\n        '{{STATIC_URL}}js/vendor/iframeResizer.js'\r\n    ],\r\n    name: 'Achilles',\r\n    icon : '<i class=\"fas fa-fw fa-pie-chart\"></i>'\r\n};\r\n\r\nplugin = function(sdk){\r\n    FingerprintProxy.getInstance().getFingerprintUID().then(function(data){\r\n        console.log(\"Starting\")\r\n        sdk.html('<iframe id=\"achillesIframe\" style=\"width: 100%; min-height: 500px; border:0;\" src=\"achilles/home?fingerprint_id='+data.fingerprint.fingerprint_hash+'\"></iframe>');\r\n\t\tsdk.refresh();\r\n\r\n\t\t$(\"#achillesIframe\").iFrameResize({\r\n\t\t        log: false\r\n\t\t     });\r\n\t});\r\n};", "submitted_desc": "123", "approved": true}}, {"pk": 3, "model": "developer.pluginversion", "fields": {"removed": false, "create_date": "2015-05-12T16:30:45.015Z", "plugin": 3, "submitted": true, "latest_update": "2015-11-11T22:50:03.123Z", "version": 1, "is_remote": false, "path": "confs = {\r\n    icon: '<i class=\"fas fa-fw fa-book\"></i>',\r\n    name: \"Literature\",\r\n    extralibs: [\"//bioinformatics.ua.pt/becas/embed-widget.js\", \"{{STATIC_URL}}js/jquery.simplePagination.js\"]\r\n};\r\n\r\nplugin = function(sdk) {\r\n    this_sdk = sdk;\r\n\r\n    var per_page = 10;\r\n    var publications = [];\r\n    var this_sdk;\r\n    var context;\r\n\r\n    function initializeBecas(pmid, container) {\r\n        var becasWidget2;\r\n\r\n        // Initialize another widget\r\n        becasWidget2 = new becas.Widget({\r\n            container: container\r\n        });\r\n        // Request abstract annotation by PMID\r\n        becasWidget2.annotatePublication({\r\n            // required parameter\r\n            pmid: pmid,\r\n            // optional parameters\r\n            groups: {\r\n                \"SPEC\": true,\r\n                \"ANAT\": true,\r\n                \"DISO\": true,\r\n                \"PATH\": true,\r\n                \"CHED\": true,\r\n                \"ENZY\": true,\r\n                \"MRNA\": true,\r\n                \"PRGE\": true,\r\n                \"COMP\": true,\r\n                \"FUNC\": true,\r\n                \"PROC\": true\r\n            },\r\n            success: function() {\r\n                // Everything went fine, widget is rendered.\r\n            },\r\n            error: function(err) {\r\n                // An error prevented annotation, an error message has rendered.\r\n            }\r\n        });\r\n    }\r\n\r\n    function collapser() {\r\n\r\n        if ($(this).text().indexOf('Collapse') !== -1) {\r\n            console.log(collapser);\r\n            expanded = false;\r\n            $(this).html('<i class=\"icon-plus\"></i>&nbsp; Expand all');\r\n            //change_name_collapse(false);\r\n\r\n            $(\".collapse\", context).collapse(\"hide\");\r\n\r\n        } else {\r\n            expanded = true;\r\n            $(this).html('<i class=\"icon-minus\"></i>&nbsp; Collapse all');\r\n            //change_name_collapse(true);\r\n            $(\".collapse\", context).collapse(\"show\");\r\n        }\r\n    }\r\n\r\n    function disableLinks() {\r\n        $('.edit_paginator .page-link', context).click(function(event) {\r\n            event.preventDefault();\r\n            return false;\r\n        });\r\n    }\r\n\r\n    function redrawIndicator(start, end) {\r\n        $('.showing_publications_info', context).html(\"Showing \" + (start + 1) + \" - \" + end + \" of \" + publications.length + \" Publications\");\r\n    }\r\n\r\n    function showPublicationPage(pageNumber) {\r\n        console.log(context);\r\n        var start = (pageNumber - 1) * per_page;\r\n        var end = ((pageNumber - 1) * per_page) + per_page;\r\n\r\n        // If last page and end is bigger than results\r\n        if (end > publications.length) {\r\n            end = publications.length;\r\n        }\r\n\r\n        console.log(\"start:\" + start + \" end: \" + end);\r\n\r\n        $('.pubscontainer', context).html('<div class=\"row\"><div class=\"col-md-12\"><button id=\"collapseliterature\" class=\"btn btn-default pull-right\" href=\"\">\\\r\n            <i class=\"icon-plus\"></i>&nbsp; Expand all</button></div></div>\\\r\n            <div class=\"clearfix fullwidth\" id=\"accordion2\" style=\"margin-top: 10px;\">');\r\n        var pub, i;\r\n        for (var i = start; i < end; i++) {\r\n            pub = publications[i];\r\n\r\n            $('.pubscontainer', context).append(\r\n                '<div data-pmid=\"'+pub.pmid+'\" class=\"panel panel-default\">\\\r\n                    <div class=\"panel-heading\">\\\r\n                        <a class=\"accordion-toggle\" data-toggle=\"collapse\" data-parent=\"#accordion2\" href=\"#collapse' + i + '\">\\\r\n                           ' + pub.title + '\\\r\n                        </a>\\\r\n                    </div>\\\r\n                    <div id=\"collapse' + i + '\" class=\"panel-collapse collapse\">\\\r\n                        <div class=\"panel-body\">\\\r\n                            <div id=\"becaswidget-' + pub.pmid + '\"></div>\\\r\n                        </div>\\\r\n                    </div>\\\r\n                </div>'\r\n            );\r\n        }\r\n\r\n        $('.pubscontainer', context).append('</div>');\r\n        /*for (var i = start; i < end; i++) {\r\n            pub = publications[i];\r\n            initializeBecas(pub.pmid, \"becaswidget-\" + pub.pmid);\r\n        }*/\r\n\r\n        $('.pubscontainer .panel').on('show.bs.collapse', function (e) {\r\n            var pmid = $(e.currentTarget).data('pmid');\r\n            $(\"#becaswidget-\" + pmid).html('');\r\n            initializeBecas(pmid, \"becaswidget-\" + pmid);\r\n        })\r\n\r\n        $('#collapseliterature', context).click(collapser);\r\n\r\n        disableLinks();\r\n        redrawIndicator(start, end);\r\n    }\r\n\r\n    function handlePagination(pageNumber, event) {\r\n        showPublicationPage(pageNumber)\r\n    }\r\n\r\n    var empty_message = '\\\r\n    <h4 class=\"pull-center\">No publications associated with this database.</h4>\\\r\n    <p class=\"pull-center\">Publications added to this database, will appear here accompanied with annotations.</p>\\\r\n    ';\r\n    sdk.html('Loading');\r\n    sdk.refresh();\r\n    context = sdk.container();\r\n\r\n    var fp = FingerprintProxy.getInstance();\r\n    var store = fp.getStore();\r\n\r\n    store.getPublications().then(function(response) {\r\n        if (response.publications && response.publications.length > 0) {\r\n            publications = response.publications;\r\n\r\n            sdk.html('<div class=\"pubscontainer panel-group\"></div>\\\r\n                <div class=\"showing_publications_info\"></div>\\\r\n                <div class=\"pull-right edit_paginator pagination\">\\\r\n            </div>');\r\n            sdk.refresh();\r\n            $('.edit_paginator', context).pagination({\r\n                items: publications.length,\r\n                itemsOnPage: per_page,\r\n                onPageClick: handlePagination\r\n            });\r\n\r\n            showPublicationPage(1);\r\n\r\n        } else {\r\n            sdk.html(empty_message);\r\n            sdk.refresh();\r\n        }\r\n    }).catch(function(ex) {\r\n        console.log(ex);\r\n        sdk.html('Error getting publications');\r\n        sdk.refresh();\r\n    });\r\n};", "submitted_desc": "testing literature replament", "approved": true}}]